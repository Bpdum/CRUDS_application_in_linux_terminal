#!/bin/bash

echo "************************************************************************"
echo "                 -----WELCOME TO LINUX -----                       "
echo "************************************************************************"
echp "this  is a dashboard of my company "
select option in create retrieve update delete quit
do

    case $option in
    create) 
        sh create.sh
        ;;
    retrieve)
        sh retrieve.sh
        ;;
    update) 
        sh update.sh
        ;;
    delete)
        sh delete.sh
        ;;
    quit) 
        exit
        ;;
    *)
        echo "Wrong selection!!"
        ;;
    esac
done

........................................
........................................
#!/bin/bash
dept=
username=
salary=
check=true
fileName=records.txt

echo "Enter Your User Name"
read username
num="date +%Y%m-%T"

echo "Enter Your Basic Salary"
read salary
echo "Enter Your Department"
read dept

if (( $dept == 'Tech' || $dept == 'HR' || $dept == 'Mark' ))
then
	echo "Your department is $dept"
else
	echo "You entered invalid department"
	exit
fi

echo "Identity Number: ${username:0:3}"-"$($num)"
echo "User Name: $username"
echo "Basic Salary: $salary"
echo "Department: $dept"

echo "press 1 to confirm or 0 to cancel"
read check

if [ $check -eq 1 ]
then
echo ${username:0:3}"-"$($num)  "$username"  "$salary"  "$dept">>$fileName
echo "New user successfully added in $fileName"
else
echo "Thank You!!!"
fi

......................................
.......................................
#!/bin/bash
fileName=records.txt

function searchName(){
	if [[ -f $fileName ]]
	then
		echo "Enter the name of employee you want"
		read name
		grep -i $name $fileName
	else
		echo "The name $name doesn't exist"
	fi
}

function highestPaid(){
	sort -nrk 3 $fileName | head -1 | awk '{print $2, $3}'
	
}

function lowestPaid(){
	sort -nrk 3 $fileName | tail -1 | awk '{print $2, $3}'
}

function totalEmployee(){
	exec < $fileName
	count=0
	while read line
	do
		count=$(( $count + 1 ))
	done
	echo "There are $count Employees in AtoZ Technologies"
}

function aboveValue(){
	echo "Enter the salary of your choice"
	read salary
	awk '{ if ( $3 > '$salary'){ print $2, $3}}' $fileName
}

function belowValue(){
	echo "Enter the salary of your choice"
	read salary
	awk '{ if ( $3 < '$salary'){ print $2, $3}}' $fileName
}

function suppliedDept(){
	if [[ -f $fileName ]]
	then
		echo "Enter the name of Department"
		read dept
		grep -i $dept $fileName
	else
		echo "The Department $dept doesn't exit"
	fi
	
}

echo "Press 1 to display employee's details"
echo "Press 2 to display salary of the highest paid employee"
echo "Press 3 to display salary of the lowest paid employee"
echo "Press 4 to display total number of employees in the company"
echo "Press 5 to display names and salaries of employees earning above the supplied value"
echo "Press 6 to display names and salaries of employees earning below the supplied value"
echo "Press 7 to display names of employees beloging to the supplied department"
echo "Press c to exit"
read option

case "$option" in
1) searchName;;
2) highestPaid;;
3)lowestPaid;;
4) totalEmployee;;
5)aboveValue;;
6)belowValue;;
7) suppliedDept;;
c) exit;;
*) echo "Wrong selection";;
esac

		
.......................................
.......................................

#!/bin/bash
fileName=records.txt
cat $fileName

function updateSalary(){
	echo "Enter the Identity Number of Employee to update"
	read idNum
	
	grep -i $idNum $fileName

	echo "Enter the value of employee's current salary"
	read currentsalary
	echo "Enter the value of employee's new salary"
	read newsalary

	sed -i s/$currentsalary/$newsalary/ $fileName
	echo "The salary $currentsalary was successful updated to $newsalary"
}

function updateDept(){
	echo "Enter the Identity Number of Employee to update"
	read idNum
	
	grep -i $idNum $fileName

	echo "Enter the value of employee's current dept"
	read currentdept
	echo "Enter the value of employee's new dept"
	read newdept

	sed -i s/$currentdept/$newdept/ $fileName
	echo "The department $currentdept was successful updated to $newdept"
}


select option in updateSalary updateDept updatePercent quit
do
	case $option in
	updateSalary)
		updateSalary;;
	updateDept)
		updateDept;;
	updatePercent)
		updatePercent;;
	quit)
		exit;;
	*)
		echo "Wrong option";;
	esac
done

..........................
the following were not created

oldrecords.txt  records.txt



